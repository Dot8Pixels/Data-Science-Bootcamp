1:25, ncol=5
m2 <- matrix(1:6, ncol=3, nrow=2, byrow = T)
m1 <- matrix(1:25, ncol=5)
m2 <- matrix(1:6, ncol=3, nrow=2, byrow = T)
m2 + 100
m2 * 4
my_name <- "Toy"
my_name <- "Toy"
my_friends <- c("Wan", "Ink", "Zue")
m1 <- matrix(1:25, ncol=5)
R_is_cool <- TRUE
my_list <- list(item1 = my_name,
item2 = my_friends,
item3 = m1,
item4 = R_is_cool)
my_list
my_list$item3
my_list$item4
friends <- c("Wan", "Ink", "Aan", "Bee", "Top")
ages <- c(26, 27, 32, 31, 28)
locations <- c("New York", "London", "London", "Tokyo", "Manchester")
movie_lover <- c(TRUE, TRUE, FALSE, TRUE, TRUE)
data.frame(friends, ages, locations, movie_lover)
df <- data.frame(friends, ages, locations, movie_lover)
df
view(df)
View(df)
my_list <- list(friends = friends,
ages = ages,
locations = locations
movie = movie_lover)
friends <- c("Wan", "Ink", "Aan", "Bee", "Top")
ages <- c(26, 27, 32, 31, 28)
locations <- c("New York", "London", "London", "Tokyo", "Manchester")
movie_lover <- c(TRUE, TRUE, FALSE, TRUE, TRUE)
my_list <- list(friends = friends,
ages = ages,
locations = locations
movie = movie_lover)
my_list <- list(friends = friends,
ages = ages,
locations = locations,
movie = movie_lover)
my_list
data.frame(my_list)
df <- data.frame(my_list)
df
friends[2]
ages <- c(26, 27, 32, 31, 28)
ages <- c(26, 27, 32, 31, 28)
friends <- c("Wan", "Ink", "Aan", "Bee", "Top")
ages <- c(26, 27, 32, 31, 28)
locations <- c("New York", "London", "London", "Tokyo", "Manchester")
movie_lover <- c(TRUE, TRUE, FALSE, TRUE, TRUE)
df <- data.frame(friends, ages, locations, movie_lover)
View(df)
friends[1:3]
friends[4:5]
friends[c(1,3,5)]
ages[ages > 30]
ages[ages <= 30]
ages
names(ages) <- friends
ages
ages["Wan"]
ages["Wan", "Aan", "Bee"]
ages[c("Wan", "Aan", "Bee")]
View(df)
df[1,3]
df[2,4]
df[1:2, 2:4]
df[, "friends"]
df[, c("friends", "locations"]
df[, c("friends", "locations")]
df[df$movie_lover = True];
df[df$movie_lover == True, ]
df[df$movie_lover == TRUE, ]
df[df$movie_lover == FALSE, ]
df[df$ages < 30, ]
df[df$friends < 30, ]
df[df$friends == "Top", ]
my_sum <- function(num1, num2){
num1 + num2
}
my_sum(10, 15)
num1 + num2
my_sum2 <- function(num1, num2=2){
num1 + num2
}
my_sum2(10)
my_sum2(10,5)
install.packages("glue")
library(glue)
my_name <- "Toy"
my_age <- 33
glue("Hello my name is {my_name}. This year I'm {my_age} years old.")
hello <- function(user_name){
glue("Hello! {user_name}")
}
hello(Gun)
hello("Gun"")
hello("Gun")
fav_book <- "Business Made Simple"
movie_lover <- TRUE
c("cat", "dog", "dog", "cat", "cat")
puppy <- c("cat", "dog", "dog", "cat", "cat")
puppy
class(puppy)
as.factor(puppy)
class(puppy)
as.factor(puppy)
as.factor(puppy)
class(puppy)
puppy <- as.factor(puppy)
class(puppy)
table(puppy)
source("C:/Users/gunsr/Desktop/Programming/Data Science Bootcamp by DATAROCKIE/Sprint 4 - Programming Foundation/R On Demand Code/R Foundation Workshop 3 Hrs/Programming Foundation with Data (8 Jan 2022).R")
matrix(x, ncol=3)
x <- 1:10
matrix(x, ncol=3)
matrix(x, ncol=5)
m1 <- matrix(x, ncol=5)
m1
m1 * 2
(m1 <- matrix(x, ncol=5))
(m1 <- matrix(x, ncol=5, byrow = T))
customer <- list(
fname = "David",
lname = "Beckham",
age = 42
)
customer
customer$fname
customer <- list(
fname = "David",
lname = "Beckham",
age = 42,
movies = c("Avenger",
"Spiderman",
"Justice League")
m = matrix(1:10, ncol=2)
)
customer <- list(
fname = "David",
lname = "Beckham",
age = 42,
movies = c("Avenger",
"Spiderman",
"Justice League"),
m = matrix(1:10, ncol=2)
)
customer$movies
customer$movies[2]
friends
friends[1:3]
ages[ages < 30]
customer$m[2:1]
customer$m[2,1]
customer$m[4,1]
customer$m[4,2]
customer02 <- list(
fname = "Marry",
lname = "Anne",
age = 35,
movies = c("Iron Man",
"Batman",
"Aquaman"),
m = matrix(1:10, ncol=2)
)
customer01 <- list(
fname = "David",
lname = "Beckham",
age = 42,
movies = c("Avenger",
"Spiderman",
"Justice League"),
m = matrix(1:10, ncol=2)
address = c("Bangkok", "London")
)
customer02 <- list(
fname = "Marry",
lname = "Anne",
age = 35,
movies = c("Iron Man",
"Batman",
"Aquaman"),
m = matrix(1:10, ncol=2)
)
customer01 <- list(
fname = "David",
lname = "Beckham",
age = 42,
movies = c("Avenger",
"Spiderman",
"Justice League"),
m = matrix(1:10, ncol=2),
address = c("Bangkok", "London")
)
customer02 <- list(
fname = "Marry",
lname = "Anne",
age = 35,
movies = c("Iron Man",
"Batman",
"Aquaman"),
m = matrix(1:10, ncol=2)
)
customer_db <- list(
id01 = customer01,
id02 = customer02,
)
customer_db <- list(
id01 = customer01,
id02 = customer02
)
customer_db
customer_db$id01
customer_db$id01$address[1]
rm(customer)
df <- data.frame(friends,
ages,
movies,
animals
)
friends <- c("Toy", "John", "Mary", "Anna", "David")
ages <- c(33, 30, 25, 28, 31)
movies <- c(T, T, F, F, T)
animals <- c("cat", "cat", "dog", "dog", "cat")
df <- data.frame(friends,
ages,
movies,
animals
)
View(df)
df$friends
df$movies
df[2, 1:5]
df[2,]
df[2, 1:4]
df <- data.frame(id = 1:5,
friends,
ages,
movies,
animals)
View(df)
df[2, 1:5]
df[df$ages < 30]
df$ages < 30
sum(df$ages < 30)
df[df$ages <30, ]
df[!df$movies, ]
write.csv(df, "friends.csv")
getwd()
setwd("C:\Users\gunsr\Desktop\Programming\Data Science Bootcamp by DATAROCKIE\Sprint 4 - Programming Foundation\R On Demand Code")
setwd("C:/Users/gunsr/Desktop/Programming/Data Science Bootcamp by DATAROCKIE/Sprint 4 - Programming Foundation/R On Demand Code")
setwd("C:/Users/gunsr/Desktop/Programming/Data Science Bootcamp by DATAROCKIE/Sprint 4 - Programming Foundation/R On Demand Code")
write.csv(df, "friends.csv")
View(df)
write.csv(df, "friends.csv", row.names = F)
list,files()
list.files()
df <- read.csv("friends.csv")
df
penguins <- read.csv("https://raw.githubusercontent.com/mwaskom/seaborn-data/master/penguins.csv")
penguins
penguins$bill_length_mm
mean(penguins$bill_length_mm)
mean(penguins$bill_length_mm, na.rm = T)
mean(penguins$bill_length_mm, na.rm = T)
sum(penguins$bill_length_mm, na.rm = T)
median(penguins$bill_length_mm, na.rm = T)
max(penguins$bill_length_mm, na.rm = T)
min(penguins$bill_length_mm, na.rm = T)
summary(penguins)
head(penguins, 3)
tail(penguins, 3)
dim(penguins)
str(penguins)
mini_penguins <- penguins[1:10, ]
mini_penguins
mini_penguins$newcolumn <- mini_penguins$bill_length_mm * 2
mini_penguins
mini_penguins$newcolumn <- NULL
View(mini_penguins)
mini_penguins <- mini_penguins$sex[, 1:6]
mini_penguins <- mini_penguins[, 1:6]
View(mini_penguins)
subset(mini_penguins, bill_length_mm > 40)
subset(mini_penguins,
bill_length_mm > 40,
c("species", "island", "bill_length_mm"))
name(result)
names(result)
result
result <- subset(mini_penguins,
bill_length_mm > 40,
c("species", "island", "bill_length_mm"))
names(result)
names(result) <- c("SPEC", "LAND", "BILL_LENGTH")
result
complete.cases(penguins)
sum(complete.cases(penguins))
nrow(penguins)
sum(complete.cases(penguins))
nrow(penguins) - sum(complete.cases(penguins))
penguins[!complete.cases(penguins), ]
data()
mtcars
head(mtcars)
apply(mtcars, 2, sum)
apply(mtcars, 1, sum)
df<- head(mtcars, 10)
df
df[3,3] <- NA
df
df[3,3] <- NA
df
complete.cases(df)
apply(df, 2, function(col) sum(is.na(col)))
df[6,7] <- NA
apply(df, 2, function(col) sum(is.na(col)))
df[1,7] <- NA
apply(df, 2, function(col) sum(is.na(col)))
my_sum <- function(x, y) {
x+y
}
my_sum(10,25)
my_cube <- function(val) {
val ** 3
}
my_cube(5)
my_cube <- function(base, power) {
base ** power
}
my_cube(5,3)
my_cube <- function(base, power=3) {
base ** power
}
my
my_cube(power=5, base=3)
test_function <- function(x) {
list(x+1, x*2, x**2)
}
test_function(5)
test_function(5)[1]
test_function(5)[[1]]
class(test_function(5)[[1]])
test_function <- function(x) {
list(value1 = x+1,
value2 = x*2,
value3 = x**2)
}
result <- fuction(5)
result <- test_fuction(5)
result <- test_function(5)
result$value1
test_01 <- function(score){
if(score >= 80){
print("A")
} else if(score >= 70){
print("B")
} else if(score >= 60){
print("C")
} else if(score >= 50){
print("D")
} else{
print("Failed")
}
}
test_01(75)
test_01(65)
test_01(60)
test_01(51)
test_01(50)
test_01(49)
test_01 <- function(score){
if(score >= 80){
print("A")
} else if(score >= 70){
print("B")
} else if(score >= 60){
print("C")
} else if(score >= 50){
print("D")
} else{
print("F")
}
}
for(i in 1:10){
print(i)
}
head(mtcars)
apply(mtcars, 2, mean)
for(i in 1:ncol(mtcars)){
print(mean(mtcars[, i]))
}
apply(mtcars, 2, mean)
x <- c(25, 30, 32, 55, 100)
x*2
for(i in 1:length(x)){
print(x[i]*2)
}
while(TRUE){
print("Hello World")
}
c <- 0
c++
}
while(c < 5){
print("Hello World")
c++
}
c+=1
c <- 0
while(c < 5){
print("Hello World")
c <- c + 1
}
login <- function(){
username = readline("Username: ")
password = readline("Password: ")
}
login <- function(){
un = readline("Username: ")
pw = readline("Password: ")
}
login
login <- function(){
un = readline("Username: ")
pw = readline("Password: ")
print(un), print(pw)
}
un = readline("Username: ")
un = readline("Username: ")
print(un); print(pw)
}
print(un)
login <- function(){
un = readline("Username: ")
pw = readline("Password: ")
print(un)
print(pw)
}
login
login()
pw = readline("Password: ")
print("Successfully Login.")
} else {
print("Your Username or Passward is incorrect")
}
}
login <- function(){
un = readline("Username: ")
pw = readline("Password: ")
if(un == "Gun" & pw == "1234"){
print("Successfully Login.")
} else {
print("Your Username or Passward is incorrect")
}
}
login()
login()
pao_ying_chub <- function(){
user_hand <- readline("Please select hand: ")
print(user_hand)
}
pao_ying_chub <- function(){
#print game rules
hands <- c("rock", "paper", "scissor")
print("Game Start!")
user_hand <- as.numeric(readline("Please select hand: 1:rock 2:paper 3:scissor"))
print(user_hand)
}
pao_ying_chub()
pao_ying_chub <- function(){
#print game rules
hands <- c("rock", "paper", "scissor")
print("Game Start!")
user_hand <- as.numeric(readline("Please select hand: 1:rock 2:paper 3:scissor"))
hands(user_hand)
}
pao_ying_chub()
pao_ying_chub <- function(){
#print game rules
hands <- c("rock", "paper", "scissor")
print("Game Start!")
user_hand <- as.numeric(readline("Please select hand: 1:rock 2:paper 3:scissor"))
hands(user_hand)
}
pao_ying_chub()
pao_ying_chub()
pao_ying_chub <- function(){
#print game rules
hands <- c("rock", "paper", "scissor")
print("Game Start!")
user_hand <- as.numeric(readline("Please select hand: 1:rock 2:paper 3:scissor"))
hands[user_hand]
}
pao_ying_chub()
pao_ying_chub <- function(){
#print game rules
hands <- c("rock", "paper", "scissor")
print("Game Start!")
user_hand <- as.numeric(readline("Please select hand: (1:rock 2:paper 3:scissor)"))
hands[user_hand]
}
pao_ying_chub()
pao_ying_chub()
pao_ying_chub()3
pao_ying_chub()3
pao_ying_chub()
cat("Hello World")
